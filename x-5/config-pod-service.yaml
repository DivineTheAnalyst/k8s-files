# ConfigMap to store application configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-config
data:
  app.color: blue        # Configuration key representing app color
  app.mode: production   # Configuration key representing app mode

---
# Pod definition to run the Nginx container and use the ConfigMap
apiVersion: v1
kind: Pod
metadata:
  name: configmap-pod
spec:
  containers:
  - name: app-container
    image: nginx    # Nginx image to serve the web page
    ports:
    - containerPort: 80  # Nginx listens on port 80
    env:                 # Environment variable configuration from ConfigMap
    - name: APP_COLOR
      valueFrom:
        configMapKeyRef:
          name: my-config
          key: app.color
    volumeMounts:
    - name: nginx-config-volume
      mountPath: /usr/share/nginx/html   # Serve custom index.html via Nginx
      subPath: index.html
  volumes:
  - name: nginx-config-volume
    configMap:
      name: my-config
      items:
      - key: app.color
        path: index.html   # Serve app.color as the content of index.html

---
# NodePort Service to expose the Pod
apiVersion: v1
kind: Service
metadata:
  name: configmap-service
spec:
  type: NodePort    # Service type is NodePort to expose on a port accessible outside the cluster
  ports:
  - port: 80        # The service port
    targetPort: 80  # The port on the container (Nginx listens on 80)
    nodePort: 30007 # External port to expose the service on the node
  selector:
    app: configmap-pod  # Matches the Pod with this label to connect the service to the Pod

